---
# Source: rucio-ui/templates/deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-ui.config.yaml
  labels:
    app: rucio-ui
    chart: rucio-ui-1.29.1
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  rucio.config.common.json: "ewogICJkYXRhYmFzZSI6IHt9Cn0="
---
# Source: rucio-ui/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-ui.cfg
  labels:
    app: rucio-ui
    chart: "rucio-ui-1.29.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  legacy_dn: "RmFsc2U="
  max_clients: "MjA="
  max_requests_per_child: "ODE5Mg=="
  max_spare_threads: "MjA="
  min_spare_threads: "MQ=="
  mpm_mode: "ZXZlbnQ="
  start_servers: "MQ=="
  threads_per_child: "NQ=="
---
# Source: rucio-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: usdf-rucio-ui-aliases
  labels:
    app: usdf-rucio-ui
    chart: "rucio-ui-1.29.1"
    release: "usdf"
    heritage: "Helm"
data:
  aliases.conf: |+
    Alias /media        /opt/rucio/.venv/lib/python2.7/site-packages/rucio/web/ui/media
    Alias /static       /opt/rucio/.venv/lib/python2.7/site-packages/rucio/web/ui/static
    WSGIScriptAlias /   /opt/rucio/.venv/lib/python2.7/site-packages/rucio/web/ui/main.py
---
# Source: rucio-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: usdf-rucio-ui
  labels:
    app: rucio-ui
    chart: rucio-ui-1.29.1
    release: usdf
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app: rucio-ui
    release: usdf
---
# Source: rucio-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-rucio-ui
  labels:
    app: rucio-ui
    chart: rucio-ui-1.29.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-ui
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-ui
        release: usdf
      annotations:
        checksum/config: 748e92131bf516558198fb507cede09f5587ff64
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-ui.config.yaml
      - name: aliases
        configMap:
          name: usdf-rucio-ui-aliases
      - name: httpdlog
        emptyDir: {}
      - name: hostcert
        secret:
          secretName: usdf-hostcert
      - name: hostkey
        secret:
          secretName: usdf-hostkey
      - name: cafile
        secret:
          secretName: usdf-cafile
      containers:
        - name: httpd-error-log
          image: busybox
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/httpd/error_log']
          volumeMounts:
          - name: httpdlog
            mountPath: /var/log/httpd
        - name: rucio-ui
          image: "rucio/rucio-ui:release-1.29.4"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /opt/rucio/etc/rucio.config.common.json
              subPath: rucio.config.common.json
            - name: httpdlog
              mountPath: /var/log/httpd
            - name: aliases
              mountPath: /opt/rucio/etc/aliases.conf
              subPath: aliases.conf
            - name: hostcert
              mountPath: /etc/grid-security/hostcert.pem
              subPath: hostcert.pem
            - name: hostkey
              mountPath: /etc/grid-security/hostkey.pem
              subPath: hostkey.pem
            - name: cafile
              mountPath: /etc/grid-security/ca.pem
              subPath: ca.pem
          env:

            - name: RUCIO_PROXY
              value: 
            - name: RUCIO_AUTH_PROXY
              value: 
            - name: RUCIO_DEFINE_ALIASES
              value: "True"
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/rucio.config.common.json"
            - name: RUCIO_LOG_FORMAT
              value: '[%{%Y-%m-%d %H:%M:%S}t]\t%v\t%h\t%{X-Forwarded-For}i\t%{X-Rucio-RequestId}i\t%>s\t%I\t%B\t%D\t\"%r\"\t\"%{X-Rucio-Auth-Token}i\"\t\"%{User-Agent}i\"\t%{X-Rucio-Script}i'
            - name: RUCIO_ENABLE_SSL
              value: "True"
          resources:
            {}
---
# Source: rucio-ui/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: usdf-rucio-ui
  labels:
    app: rucio-ui
    chart: rucio-ui-1.29.1
    release: usdf
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: rubin-rucio.slac.stanford.edu
      http:
        paths:
          - path: /
            backend:
              service:
                name: usdf-rucio-ui
                port:
                  number: 443
            pathType: Prefix
