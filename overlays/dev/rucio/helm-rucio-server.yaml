---
# Source: rucio-server/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-server.config.common
  labels:
    app: rucio-server
    chart: "rucio-server"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJwb2xpY3kiOiB7CiAgICAic2NoZW1hIjogImxzc3QiCiAgfQp9"
---
# Source: rucio-server/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-server.cfg
  labels:
    app: rucio-server
    chart: "rucio-server-32.0.0"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  grid_site_enabled: "VHJ1ZQ=="
---
# Source: rucio-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: usdf-rucio-server
  labels:
    app: rucio-server
    chart: rucio-server-32.0.0
    release: usdf
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https-rucio-server
  selector:
    app: rucio-server
    release: usdf
---
# Source: rucio-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-rucio-server
  labels:
    app: rucio-server
    chart: rucio-server-32.0.0
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-server
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-server
        release: usdf
      annotations:
        checksum/config: 5742ace8009f3260df3d9e2a005d68310813a7ae
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-server.config.common
      - name: httpdlog
        emptyDir: {}
      - name: lsst-schema-file
        secret:
          secretName: usdf-lsst-schema-file
      - name: hostcert
        secret:
          secretName: usdf-server-hostcert
      - name: hostkey
        secret:
          secretName: usdf-server-hostkey
      - name: cafile
        secret:
          secretName: usdf-server-cafile
      containers:
        - name: httpd-error-log
          image: busybox
          args: [/bin/sh, -c, 'tail -n+1 -F /var/log/httpd/error_log']
          volumeMounts:
          - name: httpdlog
            mountPath: /var/log/httpd
          resources:
            limits:
              cpu: 30m
              memory: 50Mi
            requests:
              cpu: 20m
              memory: 20Mi
        - name: rucio-server
          image: "rucio/rucio-server:release-32.5.0"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 700m
              memory: 600Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
          - name: config
            mountPath: /opt/rucio/etc/conf.d/10_common.json
            subPath: common.json
          - name: httpdlog
            mountPath: /var/log/httpd
          - name: lsst-schema-file
            mountPath: /usr/local/lib/python3.6/site-packages/rucio/common/schema/lsst.py
            subPath: lsst.py
          - name: hostcert
            mountPath: /etc/grid-security/hostcert.pem
            subPath: hostcert.pem
          - name: hostkey
            mountPath: /etc/grid-security/hostkey.pem
            subPath: hostkey.pem
          - name: cafile
            mountPath: /etc/grid-security/ca.pem
            subPath: ca.pem
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ping
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /ping
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 5
          env:
            - name: RUCIO_HTTPD_GRID_SITE_ENABLED
              valueFrom:
                secretKeyRef:
                  name: usdf-rucio-server.cfg
                  key: grid_site_enabled
            - name: RUCIO_ENABLE_SSL
              value: "True"
            - name: OPENSSL_ALLOW_PROXY_CERTS
              value: "1"
            - name: RUCIO_SERVER_TYPE
              value: "api"
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_LOG_FORMAT
              value: '[%{%Y-%m-%d %H:%M:%S}t]\t%v\t%h\t%{X-Forwarded-For}i\t%{X-Rucio-RequestId}i\t%>s\t%I\t%B\t%D\t\"%r\"\t\"%{X-Rucio-Auth-Token}i\"\t\"%{User-Agent}i\"\t%{X-Rucio-Script}i'
            - name: RUCIO_WSGI_DAEMON_PROCESSES
              value: "4"
            - name: RUCIO_WSGI_DAEMON_THREADS
              value: "4"
            - name: RUCIO_CFG_DATABASE_DEFAULT
              valueFrom:
                secretKeyRef:
                  key: db-conn-str.txt
                  name: usdf-db-conn-str
            - name: RUCIO_HTTPD_LEGACY_DN
              value: "True"
      affinity:
---
# Source: rucio-server/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: usdf-rucio-server
  labels:
    app: rucio-server
    chart: rucio-server-32.0.0
    release: usdf
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - rubin-rucio-dev.slac.stanford.edu
      secretName: rucio-server.tls-secret
  rules:
    - host: 'rubin-rucio-dev.slac.stanford.edu'
      http:
        paths:
          - path: /
            backend:
              service:
                name: usdf-rucio-server
                port:
                  number: 443
            pathType: Prefix
