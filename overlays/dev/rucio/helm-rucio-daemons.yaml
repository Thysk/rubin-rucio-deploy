---
# Source: rucio-daemons/templates/renew-fts-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: usdf-rucio-edit
---
# Source: rucio-daemons/templates/abacus-account.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.abacus-account.yaml
  labels:
    app: rucio-daemons-abacus-account
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/abacus-collection-replica.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.abacus-collection-replica.yaml
  labels:
    app: rucio-daemons-abacus-collection-replica
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/abacus-rse.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.abacus-rse.yaml
  labels:
    app: rucio-daemons-abacus-rse
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/conveyor-finisher.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.conveyor-finisher
  labels:
    app: rucio-daemons-conveyor-finisher
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/conveyor-poller.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.conveyor-poller
  labels:
    app: rucio-daemons-conveyor-poller
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/conveyor-submitter.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.conveyor-submitter
  labels:
    app: rucio-daemons-conveyor-submitter
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/judge-cleaner.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.judge-cleaner.yaml
  labels:
    app: rucio-daemons-judge-cleaner
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/judge-evaluator.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.judge-evaluator.yaml
  labels:
    app: rucio-daemons-judge-evaluator
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/judge-injector.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.judge-injector.yaml
  labels:
    app: rucio-daemons-judge-injector
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/judge-repairer.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.judge-repairer.yaml
  labels:
    app: rucio-daemons-judge-repairer
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/minos.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.minos.yaml
  labels:
    app: rucio-daemons-minos
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/necromancer.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.necromancer.yaml
  labels:
    app: rucio-daemons-necromancer
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/reaper.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.reaper.yaml
  labels:
    app: rucio-daemons-reaper
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/transmogrifier.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.transmogrifier.yaml
  labels:
    app: rucio-daemons-transmogrifier
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/undertaker.yaml
apiVersion: v1
kind: Secret
metadata:
  name: usdf-rucio-daemons.config.undertaker.yaml
  labels:
    app: rucio-daemons-undertaker
    chart: "rucio-daemons-1.30.1"
    release: "usdf"
    heritage: "Helm"
type: Opaque
data:
  common.json: "ewogICJjb252ZXlvciI6IHsKICAgICJjYWNlcnQiOiAiL29wdC9jZXJ0cy9jYS5wZW0iLAogICAgImZ0c2hvc3RzIjogImh0dHBzOi8vZnRzLWV2YWwwMS5zbGFjLnN0YW5mb3JkLmVkdTo4NDQ2IiwKICAgICJzY2hlbWUiOiAic3JtLGdzaWZ0cCxyb290LGh0dHAsaHR0cHMiLAogICAgInRyYW5zZmVydG9vbCI6ICJmdHMzIiwKICAgICJ1c2VyY2VydCI6ICIvb3B0L3Byb3h5L3g1MDl1cCIKICB9LAogICJtb25pdG9yIjogewogICAgImVuYWJsZV9tZXRyaWNzIjogIlRydWUiCiAgfQp9"
  component.json: "e30="
---
# Source: rucio-daemons/templates/renew-fts-account.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: usdf-rucio-edit
  namespace: default
subjects:
- kind: ServiceAccount
  name: usdf-rucio-edit
  namespace: default
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io
---
# Source: rucio-daemons/templates/abacus-account.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-abacus-account
  labels:
    app: rucio-daemons-abacus-account
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-abacus-account
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-abacus-account
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: abacus-account
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.abacus-account.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "abacus-account"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/abacus-collection-replica.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-abacus-collection-replica
  labels:
    app: rucio-daemons-abacus-collection-replica
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-abacus-collection-replica
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-abacus-collection-replica
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: abacus-collection-replica
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.abacus-collection-replica.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "abacus-collection-replica"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/abacus-rse.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-abacus-rse
  labels:
    app: rucio-daemons-abacus-rse
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-abacus-rse
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-abacus-rse
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: abacus-rse
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.abacus-rse.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "abacus-rse"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/conveyor-finisher.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-conveyor-finisher
  labels:
    app: rucio-daemons-conveyor-finisher
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-conveyor-finisher
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-conveyor-finisher
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: conveyor-finisher
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.conveyor-finisher
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "conveyor-finisher"
            - name: RUCIO_DAEMON_ARGS
              value: " --total-threads 1 --activities 'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' Production Input' 'Production Output' Analysis Input' 'Analysis Output' 'Staging' 'T0 Export' 'T0 Tape' 'Upload/Download' 'User Subscriptions' 'Data Challenge'"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/conveyor-poller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-conveyor-poller
  labels:
    app: rucio-daemons-conveyor-poller
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-conveyor-poller
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-conveyor-poller
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: conveyor-poller
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.conveyor-poller
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "conveyor-poller"
            - name: RUCIO_DAEMON_ARGS
              value: " --total-threads 1  --activities 'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' Production Input' 'Production Output' Analysis Input' 'Analysis Output' 'Staging' 'T0 Export' 'T0 Tape' 'Upload/Download' 'User Subscriptions' 'Data Challenge'"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/conveyor-submitter.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-conveyor-submitter
  labels:
    app: rucio-daemons-conveyor-submitter
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-conveyor-submitter
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-conveyor-submitter
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: conveyor-submitter
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.conveyor-submitter
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "conveyor-submitter"
            - name: RUCIO_DAEMON_ARGS
              value: " --total-threads 1 --sleep-time 10 --activities 'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' Production Input' 'Production Output' Analysis Input' 'Analysis Output' 'Staging' 'T0 Export' 'T0 Tape' 'Upload/Download' 'User Subscriptions' 'Data Challenge'"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/judge-cleaner.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-judge-cleaner
  labels:
    app: rucio-daemons-judge-cleaner
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-judge-cleaner
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-judge-cleaner
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: judge-cleaner
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.judge-cleaner.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "judge-cleaner"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/judge-evaluator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-judge-evaluator
  labels:
    app: rucio-daemons-judge-evaluator
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-judge-evaluator
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-judge-evaluator
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: judge-evaluator
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.judge-evaluator.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "judge-evaluator"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/judge-injector.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-judge-injector
  labels:
    app: rucio-daemons-judge-injector
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-judge-injector
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-judge-injector
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: judge-injector
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.judge-injector.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "judge-injector"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/judge-repairer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-judge-repairer
  labels:
    app: rucio-daemons-judge-repairer
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-judge-repairer
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-judge-repairer
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: judge-repairer
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.judge-repairer.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "judge-repairer"
            - name: RUCIO_DAEMON_ARGS
              value: "--threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/minos.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-minos
  labels:
    app: rucio-daemons-minos
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-minos
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-minos
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: minos
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.minos.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "minos"
            - name: RUCIO_DAEMON_ARGS
              value: " --threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
---
# Source: rucio-daemons/templates/necromancer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-necromancer
  labels:
    app: rucio-daemons-necromancer
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-necromancer
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-necromancer
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: necromancer
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.necromancer.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "necromancer"
            - name: RUCIO_DAEMON_ARGS
              value: ""
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
---
# Source: rucio-daemons/templates/reaper.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-reaper
  labels:
    app: rucio-daemons-reaper
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-reaper
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-reaper
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: reaper
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.reaper.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle-reaper
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /etc/grid-security/certificates
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "reaper"
            - name: RUCIO_DAEMON_ARGS
              value: ' --threads 4'
            - name: GLOBUS_THREAD_MODEL
              value: "pthread"
            - name: RUCIO_HOME
              value: "/opt/rucio/reaper"
            - name: X509_USER_PROXY
              value: "/opt/proxy/x509up"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/transmogrifier.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-transmogrifier
  labels:
    app: rucio-daemons-transmogrifier
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-transmogrifier
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-transmogrifier
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: transmogrifier
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.transmogrifier.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      - name: ca-volume
        secret:
          secretName: usdf-rucio-ca-bundle
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: proxy-volume
              mountPath: /opt/proxy
            - name: ca-volume
              mountPath: /opt/certs
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "transmogrifier"
            - name: RUCIO_DAEMON_ARGS
              value: " --threads 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/undertaker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdf-undertaker
  labels:
    app: rucio-daemons-undertaker
    app-group: rucio-daemons
    chart: rucio-daemons-1.30.1
    release: usdf
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rucio-daemons-undertaker
      release: usdf
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: rucio-daemons-undertaker
        app-group: rucio-daemons
        release: usdf
        rucio-daemon: undertaker
      annotations:
        checksum/config: f650d3c84674b3f6ab1f46aa98027cb5241506eb
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: config
        secret:
          secretName: usdf-rucio-daemons.config.undertaker.yaml
      - name: proxy-volume
        secret:
          secretName: usdf-rucio-x509up
      containers:
        - name: rucio-daemons
          image: "rucio/rucio-daemons:release-1.29.10"
          imagePullPolicy: Always
          volumeMounts:
            - name: config
              mountPath: /opt/rucio/etc/conf.d/10_common.json
              subPath: common.json
            - name: config
              mountPath: /opt/rucio/etc/conf.d/20_component.json
              subPath: component.json
            - name: proxy-volume
              mountPath: /opt/proxy
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUCIO_OVERRIDE_CONFIGS
              value: "/opt/rucio/etc/conf.d/"
            - name: RUCIO_DAEMON
              value: "undertaker"
            - name: RUCIO_DAEMON_ARGS
              value: " --total-workers 1"
          resources:
            limits:
              cpu: 700m
              memory: 200Mi
            requests:
              cpu: 700m
              memory: 200Mi
---
# Source: rucio-daemons/templates/renew-fts-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: usdf-renew-fts-proxy
spec:
  schedule: "12 */6 * * *"
  jobTemplate:
    spec:
      template:
        spec:        
          serviceAccountName: usdf-rucio-edit
          volumes:
          - name: usercert
            secret:
              secretName: usdf-fts-cert
          - name: userkey
            secret:
              secretName: usdf-fts-key
          containers:
            - name: renew-fts-cron
              image: "bjwhitefnal/rubin-rucio-fts-cron:1.29.10"
              imagePullPolicy: Always
              resources:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              volumeMounts:
                - name: usercert
                  mountPath: /opt/rucio/certs/
                - name: userkey
                  mountPath: /opt/rucio/keys/
              env:
                - name: RUCIO_VO
                  value: "lsst"
                - name: RUCIO_FTS_VOMS
                  value: "lsst:/lsst/Role=ddmopr"
                - name: RUCIO_FTS_SERVERS
                  value: "https://fts-eval01.slac.stanford.edu:8446"
                - name: RUCIO_FTS_SECRETS
                  value: "usdf-rucio-x509up"
          restartPolicy: OnFailure
---
# Source: rucio-daemons/templates/renew-fts-cronjob.yaml
# Also run the cronjob as a one-time job on installation. To perform the first initialization of proxies
apiVersion: batch/v1
kind: Job
metadata:
  name: usdf-renew-fts-proxy-on-helm-install
  annotations:
    helm.sh/hook: post-install  # Relies on rucio service account, created by this helm chart
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    spec:    
      serviceAccountName: usdf-rucio-edit
      volumes:
      - name: usercert
        secret:
          secretName: usdf-fts-cert
      - name: userkey
        secret:
          secretName: usdf-fts-key
      containers:
        - name: renew-fts-cron
          image: "bjwhitefnal/rubin-rucio-fts-cron:1.29.10"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: usercert
              mountPath: /opt/rucio/certs/
            - name: userkey
              mountPath: /opt/rucio/keys/
          env:
            - name: RUCIO_VO
              value: "lsst"
            - name: RUCIO_FTS_VOMS
              value: "lsst:/lsst/Role=ddmopr"
            - name: RUCIO_FTS_SERVERS
              value: "https://fts-eval01.slac.stanford.edu:8446"
            - name: RUCIO_FTS_SECRETS
              value: "usdf-rucio-x509up"
      restartPolicy: OnFailure
